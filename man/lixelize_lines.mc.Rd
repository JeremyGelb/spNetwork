% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geometrical_functions.R
\name{lixelize_lines.mc}
\alias{lixelize_lines.mc}
\title{Cut a SpatialLines object into lixels with a specified minimal distance
may fail if the lines geometries are self intersecting. This version can
use a plan defined with the package future}
\usage{
lixelize_lines.mc(
  lines,
  lx_length,
  mindist = NULL,
  show_progress = T,
  chunk_size = 100
)
}
\arguments{
\item{lines}{The SpatialLinesDataframe to modify}

\item{lx_length}{The length of a lixel}

\item{mindist}{The minimum length of a lixel. After cut, if the length of
the final lixel is shorter than the minimum distance, then it is added to
the previous lixel. if NULL, then mindist = maxdist/10}

\item{show_progress}{A boolean indicating if a progress bar must be displayed}

\item{chunk_size}{The size of a chunk used for multiprocessing. Default is 100.}
}
\value{
An object of class SpatialLinesDataFrame (package sp)
}
\description{
Cut a SpatialLines object into lixels with a specified minimal distance
may fail if the lines geometries are self intersecting. This version can
use a plan defined with the package future
}
\examples{
data('mtl_network')
future::plan(future::multiprocess(workers=2))
lixels <- lixelize_lines.mc(mtl_network,150,50)
\dontshow{
   ## R CMD check: make sure any open connections are closed afterward
   if (!inherits(future::plan(), "sequential")) future::plan(future::sequential)
}
}
