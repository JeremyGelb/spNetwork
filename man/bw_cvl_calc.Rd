% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bandwidth_selection_cvl.R
\name{bw_cvl_calc}
\alias{bw_cvl_calc}
\title{Bandwidth selection by Cronie and Van Lieshout's Criterion}
\usage{
bw_cvl_calc(
  bw_range,
  bw_step,
  lines,
  events,
  w,
  kernel_name,
  method,
  diggle_correction = FALSE,
  study_area = NULL,
  max_depth = 15,
  digits = 5,
  tol = 0.1,
  agg = NULL,
  sparse = TRUE,
  grid_shape = c(1, 1),
  sub_sample = 1,
  verbose = TRUE,
  check = TRUE
)
}
\arguments{
\item{bw_range}{The range of the bandwidths to consider, given as a numeric
vector of two values: c(bandwidth_min, bandwidth_max)}

\item{bw_step}{The step between each bandwidth to calculate given as a float}

\item{lines}{A SpatialLinesDataFrame representing the underlying network. The
geometries must be a SpatialLinesDataFrame (may crash if some geometries
 are invalid)}

\item{events}{events A SpatialPointsDataFrame representing the events on the
network. The points will be snapped on the network.}

\item{w}{A vector representing the weight of each event}

\item{kernel_name}{The name of the kernel to use. Must be one of triangle,
gaussian, tricube, cosine ,triweight, quartic, epanechnikov or uniform.}

\item{method}{The method to use when calculating the NKDE, must be one of
simple / discontinuous / continuous (see details for more information)}

\item{diggle_correction}{A Boolean indicating if the correction factor
for edge effect must be used.}

\item{study_area}{A SpatialPolygonsDataFrame or a SpatialPolygon
representing the limits of the study area.}

\item{max_depth}{when using the continuous and discontinuous methods, the
calculation time and memory use can go wild  if the network has many
small edges (area with many of intersections and many events). To
avoid it, it is possible to set here a maximum depth. Considering that the
kernel is divided at intersections, a value of 10 should yield good
estimates in most cases. A larger value can be used without problem for the
discontinuous method. For the continuous method, a larger value will
strongly impact calculation speed.}

\item{digits}{The number of digits to retain in the spatial coordinates. It
ensures that topology is good when building the network. Default is 3}

\item{tol}{When adding the events and the sampling points to the network,
the minimum distance between these points and the lines' extremities. When
points are closer, they are added at the extremity of the lines.}

\item{agg}{A double indicating if the events must be aggregated within a distance.
If NULL, the events are aggregated by rounding the coordinates.}

\item{sparse}{A Boolean indicating if sparse or regular matrix should be
used by the Rcpp functions. Regular matrix are faster, but require more
memory and could lead to error, in particular with multiprocessing. Sparse
matrix are slower, but require much less memory (not used for the moment).}

\item{grid_shape}{A vector of two values indicating how the study area
must be split when performing the calculus (see details). Default is c(1,1).}

\item{sub_sample}{A float between 0 and 1 indicating the percentage of quadra
to keep in the calculus. For large datasets, it may be useful to limit the
bandwidth evaluation and thus reduce calculation time.}

\item{verbose}{A Boolean, indicating if the function should print messages
about process.}

\item{check}{A Boolean indicating if the geometry checks must be run before
calculating the density.}
}
\value{
A dataframe with two columns, one for the bandwidths and the second for
the Cronie and Van Lieshout's Criterion.
}
\description{
Calculate for multiple bandiwdths the Cronie and Van Lieshout's Criterion to
select an appropriate bandwidth in a data driven approach.
}
\details{
The Cronie and Van Lieshout's Criterion \insertCite{cronie2018non}{spNetwork}
find the optimal bandwidth by minimizing the difference between the size of the observation
window and the sum of the reciprocal of the estimated kernel density at the
events locations. In the network case, the size of the study area is the sum
of the length of each line in the network. Thus, it is important to only
use the necessary parts of the network.
}
\examples{
\donttest{
networkgpkg <- system.file("extdata", "networks.gpkg", package = "spNetwork", mustWork = TRUE)
eventsgpkg <- system.file("extdata", "events.gpkg", package = "spNetwork", mustWork = TRUE)
mtl_network <- rgdal::readOGR(networkgpkg,layer="mtl_network", verbose=FALSE)
bike_accidents <- rgdal::readOGR(eventsgpkg,layer="bike_accidents", verbose=FALSE)
cv_scores <- bw_cvl_calc(c(200,400),50,
                               mtl_network, bike_accidents,
                               rep(1,nrow(bike_accidents)),
                               "quartic", "discontinuous",
                               diggle_correction = FALSE, study_area = NULL,
                               max_depth = 8,
                               digits=2, tol=0.1, agg=5,
                               sparse=TRUE, grid_shape=c(1,1),
                               sub_sample = 1, verbose=TRUE, check=TRUE)
}
}
\references{
{
    \insertAllCited{}
}
}
